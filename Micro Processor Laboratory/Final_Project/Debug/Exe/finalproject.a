;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 1/7/2023
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <alcd.h>
;#include <stdio.h>
;
;char ll[16];
;char seg[10]={0X3F,0X06,0X5B,0X4F,0X66,0X6D,0X7D,0X07,0XFF,0XEF};

	.DSEG
;int i=0 , j=0 , a , b , c=1 , s=1 , second=0;
;
;// External Interrupt 2 service routine
;interrupt [EXT_INT2] void ext_int2_isr(void)
; 0000 0023 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0024     if(PORTB.3==1)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0025     {
; 0000 0026      delay_ms(2000);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0027     }
; 0000 0028 
; 0000 0029     if(PORTB.3==0)
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 002A     {
; 0000 002B      delay_ms(2000);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 002C     }
; 0000 002D 
; 0000 002E }
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;
;void main(void)
; 0000 0031 {
;PCODE: $0000001E VOL: 0
; 0000 0032 
; 0000 0033 DDRA=0XFF;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0034 PORTA=0X00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0035 
; 0000 0036 DDRB=0xFF;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0037 PORTB=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0038 
; 0000 0039 DDRC=0X7F;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 003A PORTC=0X7F;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 003B 
; 0000 003C DDRD=0XFF;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 003D PORTD=0X00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 003E 
; 0000 003F // Timer/Counter 0 initialization
; 0000 0040 // Clock source: System Clock
; 0000 0041 // Clock value: Timer 0 Stopped
; 0000 0042 // Mode: Normal top=0xFF
; 0000 0043 // OC0 output: Disconnected
; 0000 0044 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0045 TCNT0=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0046 OCR0=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0047 
; 0000 0048 // Timer/Counter 1 initialization
; 0000 0049 // Clock source: System Clock
; 0000 004A // Clock value: Timer1 Stopped
; 0000 004B // Mode: Normal top=0xFFFF
; 0000 004C // OC1A output: Disconnected
; 0000 004D // OC1B output: Disconnected
; 0000 004E // Noise Canceler: Off
; 0000 004F // Input Capture on Falling Edge
; 0000 0050 // Timer1 Overflow Interrupt: Off
; 0000 0051 // Input Capture Interrupt: Off
; 0000 0052 // Compare A Match Interrupt: Off
; 0000 0053 // Compare B Match Interrupt: Off
; 0000 0054 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0055 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0056 TCNT1H=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0057 TCNT1L=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0058 ICR1H=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0059 ICR1L=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 005A OCR1AH=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 005B OCR1AL=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 005C OCR1BH=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 005D OCR1BL=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 005E 
; 0000 005F // Timer/Counter 2 initialization
; 0000 0060 // Clock source: System Clock
; 0000 0061 // Clock value: Timer2 Stopped
; 0000 0062 // Mode: Normal top=0xFF
; 0000 0063 // OC2 output: Disconnected
; 0000 0064 ASSR=0<<AS2;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0065 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0066 TCNT2=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0067 OCR2=0x00;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0068 
; 0000 0069 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 006A TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 006B 
; 0000 006C // External Interrupt(s) initialization
; 0000 006D // INT0: Off
; 0000 006E // INT1: Off
; 0000 006F // INT2: On
; 0000 0070 // INT2 Mode: Falling Edge
; 0000 0071 GICR|=(0<<INT1) | (0<<INT0) | (1<<INT2);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0072 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0073 MCUCSR=(0<<ISC2);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0074 GIFR=(0<<INTF1) | (0<<INTF0) | (1<<INTF2);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0075 
; 0000 0076 // USART initialization
; 0000 0077 // USART disabled
; 0000 0078 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0079 
; 0000 007A // Analog Comparator initialization
; 0000 007B // Analog Comparator: Off
; 0000 007C // The Analog Comparator's positive input is
; 0000 007D // connected to the AIN0 pin
; 0000 007E // The Analog Comparator's negative input is
; 0000 007F // connected to the AIN1 pin
; 0000 0080 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0081 SFIOR=(0<<ACME);
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0082 
; 0000 0083 // ADC initialization
; 0000 0084 // ADC disabled
; 0000 0085 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0086 
; 0000 0087 // SPI initialization
; 0000 0088 // SPI disabled
; 0000 0089 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 008A 
; 0000 008B // TWI initialization
; 0000 008C // TWI disabled
; 0000 008D TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 008E 
; 0000 008F // Alphanumeric LCD initialization
; 0000 0090 // Connections are specified in the
; 0000 0091 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0092 // RS - PORTB Bit 0
; 0000 0093 // RD - PORTB Bit 1
; 0000 0094 // EN - PORTB Bit 2
; 0000 0095 // D4 - PORTB Bit 4
; 0000 0096 // D5 - PORTB Bit 5
; 0000 0097 // D6 - PORTB Bit 6
; 0000 0098 // D7 - PORTB Bit 7
; 0000 0099 // Characters/line: 16
; 0000 009A lcd_init(16);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 009B 
; 0000 009C // Global enable interrupts
; 0000 009D #asm("sei")
;PCODE: $0000006A VOL: 0
	sei
;PCODE: $0000006B VOL: 0
; 0000 009E 
; 0000 009F while (1)
;PCODE: $0000006C VOL: 0
; 0000 00A0       {
; 0000 00A1 
; 0000 00A2       // ---------(*)-----------
; 0000 00A3          if(PINA.7==0 && PINA.6==0)
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 00A4           {
; 0000 00A5                // ---------(Part1 run)-----------
; 0000 00A6                PORTC=~seg[a];
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 00A7                PORTD=seg[b];
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 00A8                if(PINC.7==1 && c==1)
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 00A9                {
; 0000 00AA                b++;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 00AB                c=0;
;PCODE: $0000008D VOL: 0
; 0000 00AC                }
; 0000 00AD 
; 0000 00AE                if(PINC.7==0)
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 00AF                {
; 0000 00B0                c=1;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 00B1                }
; 0000 00B2 
; 0000 00B3                if(b==10)
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 00B4                {
; 0000 00B5                b=0;
;PCODE: $00000098 VOL: 0
; 0000 00B6                a++;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 00B7                }
; 0000 00B8 
; 0000 00B9                if(a==2 && b==1)
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 00BA                {
; 0000 00BB                a=0;
;PCODE: $000000A7 VOL: 0
; 0000 00BC                b=0;
;PCODE: $000000A8 VOL: 0
; 0000 00BD                s=1;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00BE                second=s;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 00BF                }
; 0000 00C0 
; 0000 00C1                // ---------(Part1 run so this code run)-----------
; 0000 00C2                if(PIND.7==1 && second)
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 00C3                {
; 0000 00C4                    for(j=0; j<2; j++)
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 00C5                    {
; 0000 00C6                      for(i=0; i<10; i++)
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 00C7                      {
; 0000 00C8                        PORTD=seg[i];
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 00C9                        PORTC=~seg[j];
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 00CA                        delay_ms(500);
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 00CB                      }
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 00CC                    }
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00CD                }
; 0000 00CE 
; 0000 00CF           }
;PCODE: $000000E1 VOL: 0
; 0000 00D0 
; 0000 00D1           // ---------(*)-----------
; 0000 00D2           if(PINA.6==1 && PINA.7==1)
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 00D3           {
; 0000 00D4           PORTB=0X08;
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 00D5           delay_ms(1000);
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 00D6           PORTB=0X00;
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 00D7           delay_ms(1000);
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 00D8           }
; 0000 00D9 
; 0000 00DA           // ---------(*)-----------
; 0000 00DB           if(PINA.6==1 && PINA.7==0)
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 00DC           {
; 0000 00DD           PORTA=0X21;
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 00DE           delay_ms(2000);
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 00DF           PORTA=0X12;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 00E0           delay_ms(2000);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 00E1           PORTA=0X0c;
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 00E2           delay_ms(2000);
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 00E3           PORTA=0X12;
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 00E4           delay_ms(2000);
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 00E5           }
; 0000 00E6 
; 0000 00E7           // ---------(*)-----------
; 0000 00E8           if(PINA.7==1 && PINA.6==0)
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 00E9           {
; 0000 00EA           PORTB=0X80;
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00EB           delay_ms(500);
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 00EC           PORTB=0X00;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00ED           delay_ms(500);
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00EE 
; 0000 00EF 
; 0000 00F0           sprintf(ll,"Time : %2d :%d",j,i);
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 00F1           lcd_gotoxy(2,0);
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 00F2           lcd_puts(ll);
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00F3 
; 0000 00F4           if(PINA.7==1)
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00F5           {
; 0000 00F6               delay_ms(500);
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 00F7               i++;
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 00F8           }
; 0000 00F9 
; 0000 00FA           if(i==10)
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 00FB           {
; 0000 00FC               i=0;
;PCODE: $00000145 VOL: 0
; 0000 00FD               j++;
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00FE           }
; 0000 00FF 
; 0000 0100           if(j==60)
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 0101           {
; 0000 0102               j=0;
;PCODE: $0000014D VOL: 0
; 0000 0103               if(i>60)
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 0104               j=0;
;PCODE: $00000151 VOL: 0
; 0000 0105           }
;PCODE: $00000152 VOL: 0
; 0000 0106 
; 0000 0107           if(PINA.7==0)
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0108           {
; 0000 0109               i=0;
;PCODE: $00000157 VOL: 0
; 0000 010A               j=0;
;PCODE: $00000158 VOL: 0
; 0000 010B           }
; 0000 010C 
; 0000 010D 
; 0000 010E           }
;PCODE: $00000159 VOL: 0
; 0000 010F 
; 0000 0110           // ---------(*)-----------
; 0000 0111           if(PINA.6==0 || PINA.7==0)
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 0112           {
; 0000 0113            PORTA=0X00;
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 0114           }
; 0000 0115 
; 0000 0116 
; 0000 0117 
; 0000 0118 
; 0000 0119 
; 0000 011A       }
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 011B }
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
